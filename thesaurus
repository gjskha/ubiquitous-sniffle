#!/usr/bin/python
# interface to the Merriam-Webster thesaurus

import json
import requests
import getopt
import sys
import os

def help():
	print("help")

def fetch_resource(filename,url,config):

	resource = None

	for method in config["methods"]:
		if (method == "net") and (resource == None):

			response = requests.get(url)

			if response.status_code == 200:

				resource = response.json()

		if (method == "disk") and (resource == None):
			try:

				with open(filename) as f:
					resource = json.loads(f.read())

			except IOError:
				print("File not accessible")

	return resource


def parse_config(filename):
	config = None
	try:
		with open(filename) as config_file:
			config = json.loads(config_file.read())
	except IOError:
		print("config file not found")

	return config

def get_body(word,config):

	url = "https://www.dictionaryapi.com/api/v3/references/thesaurus/json/" + word + "?key=" + config["tkey"]
	filename = config["cache_dir"] + "/" + word + ".json"

	json = fetch_resource(filename,url,config)

	return json

def print_data(data,config):

	print("print the data")


def main():

	# defaults
	methods = ["net","disk"]
	config_file = os.environ['HOME'] + "/.mwrc"

	# parse command line options
	(args, _) = getopt.getopt(sys.argv[1:], 'hxc:w:')
	for o,a in args:
		if o == "-h":
			help()
			sys.exit()
		elif o == "-w":
			word = a
		elif o == "-x":
			methods = ["disk","net"]
		elif o == "-c":
			config_file = a
		else:
			assert False, "unhandled option"
	

	config = parse_config(config_file)
	config["methods"] = methods

	data = get_body(word, config)

	# XXX unexpected data
	#if not data[0]["fl"]:
	#	print(data)
	#	sys.exit

	for i in range(len(data)):
		print(i,end=") ")
		print("function: "+data[i]["fl"])

		# synonyms
		print("synonyms:")
		for j in range(len(data[i]["meta"]["syns"])):
			print(j,end=") ")
			print(', '.join(data[i]["meta"]["syns"][j]))

		#print_data(word_data,config)


if __name__ == "__main__":
 	main()
